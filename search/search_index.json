{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"EOAP CWL Wrap","text":"<p><code>eoap-cwlwrap</code> is a command-line utility that composes a CWL <code>Workflow</code> from a series of <code>Workflow</code>/<code>CommandLineTool</code> steps, defined according to Application package patterns based on data stage-in and stage-out behaviors commonly used in EO workflows, and packs it into a single self-contained CWL document.</p>"},{"location":"#installation","title":"\ud83d\udee0 Installation","text":"<pre><code>pip install eoap-cwlwrap\n</code></pre> <p>or, for early adopters:</p> <pre><code>pip install --no-cache-dir git+https://github.com/EOEPCA/eoap-cwlwrap@main\n</code></pre>"},{"location":"#prerequisites","title":"\ud83e\udde0 Prerequisites","text":""},{"location":"#stage-in","title":"stage-in","text":"<ul> <li>One input parameter of type URI;</li> <li>One output of type Directory.</li> </ul>"},{"location":"#stage-out","title":"stage-out","text":"<ul> <li>One input parameter of type Directory;</li> <li>One output of type URI.</li> </ul>"},{"location":"#app","title":"app","text":"<p>Inputs:</p> <ul> <li>has one or more parameter of type Directory or File, that:<ul> <li>it can be nullable <code>?</code>;</li> <li>it can be an array <code>[]</code>.</li> </ul> </li> </ul> <p>Outputs:</p> <ul> <li>has one or more parameter of type Directory<ul> <li>it can be an array <code>[]</code>.</li> </ul> </li> </ul>"},{"location":"#main","title":"main","text":"<ul> <li><code>inputs</code> coming from <code>app</code>:<ul> <li>if type is assignable to Directory  or File, it is converted to URI input in <code>main</code>;</li> <li>any other kind of input won't be transformed;</li> </ul> </li> <li><code>outpus</code> coming from <code>app</code>:<ul> <li>if type is assignable to Directory it is converted to URI output in <code>main</code>;</li> <li>any other kind of output won't be transformed, but referenced to the related <code>app</code> output;</li> </ul> </li> </ul>"},{"location":"#features","title":"\ud83d\ude80 Features","text":"<ul> <li>\ud83e\uddf1 Chain multiple <code>Workflow</code>/<code>CommandLineTool</code> CWLs into a <code>Workflow</code>;</li> <li>\ud83e\uddea Validate type compatibility between steps;</li> <li>\ud83d\udce6 Pack the entire workflow and dependencies into one file;</li> <li>\ud83d\udcbe Output to any location, with automatic directory creation.</li> </ul>"},{"location":"#usage","title":"\ud83e\uddd1\u200d\ud83d\udcbb Usage","text":"<pre><code>eoap-cwlwrap \\\n--stage-in ./stage-in.cwl \\\n--workflow ./workflow.cwl \\\n--workflow-id water-bodies-detection \\\n--stage-out ./stage-out.cwl \\\n--output ./current.cwl\n</code></pre>"},{"location":"#options","title":"\ud83d\udd27 Options","text":"Option Description <code>--directory-stage-in</code> The CWL stage-in URL or file for Directory derived types <code>--file-stage-in</code> The CWL stage-in URL or file for File derived types <code>--workflow</code> The CWL workflow URL or file <code>--workflow-id</code> ID of the workflow <code>--stage-out</code> `The CWL stage-out URL or file <code>--output\"</code> The output file path"},{"location":"#requirements","title":"\ud83e\udde0 Requirements","text":"<ul> <li>Python \u2265 3.9</li> </ul>"},{"location":"#dependendies","title":"Dependendies","text":"<p>Package installation will automatically install the following dependencies:</p> <ul> <li>cwltool</li> <li>cwl-utils</li> <li>cwl-loader</li> <li>ruamel.yaml</li> <li>Jinja2</li> <li>click</li> </ul>"},{"location":"#using-the-container","title":"Using the container","text":"<pre><code>docker run -it --rm ghcr.io/eoepca/eoap-cwlwrap/eoap-cwlwrap:latest eoap-cwlwrap --help\n</code></pre>"},{"location":"#run-the-tests","title":"Run the tests","text":"<pre><code>hatch test --verbose\n</code></pre>"},{"location":"example/","title":"A simple example: Pattern 1 - single input, single output","text":"In\u00a0[1]: Copied! <pre>from cwl_loader import dump_cwl\nfrom eoap_cwlwrap import wrap_locations\n\nbase_url = 'https://raw.githubusercontent.com/eoap/application-package-patterns/refs/heads/main'\nworkflow_id = 'pattern-1'\n\nstage_in_cwl = f\"{base_url}/templates/stage-in.cwl\"\nworkflows_cwl = f\"{base_url}/cwl-workflow/{workflow_id}.cwl\"\nstage_out_cwl = f\"{base_url}/templates/stage-out.cwl\"\n\nmain_workflow = wrap_locations(\n    directory_stage_in=stage_in_cwl,\n    workflows=workflows_cwl,\n    workflow_id=workflow_id,\n    stage_out=stage_out_cwl\n)\n</pre> from cwl_loader import dump_cwl from eoap_cwlwrap import wrap_locations  base_url = 'https://raw.githubusercontent.com/eoap/application-package-patterns/refs/heads/main' workflow_id = 'pattern-1'  stage_in_cwl = f\"{base_url}/templates/stage-in.cwl\" workflows_cwl = f\"{base_url}/cwl-workflow/{workflow_id}.cwl\" stage_out_cwl = f\"{base_url}/templates/stage-out.cwl\"  main_workflow = wrap_locations(     directory_stage_in=stage_in_cwl,     workflows=workflows_cwl,     workflow_id=workflow_id,     stage_out=stage_out_cwl ) <pre>2025-09-30 08:09:36.170 | DEBUG    | cwl_loader:load_cwl_from_location:226 - Loading CWL document from https://raw.githubusercontent.com/eoap/application-package-patterns/refs/heads/main/cwl-workflow/pattern-1.cwl...\n</pre> <pre>2025-09-30 08:09:36.306 | DEBUG    | cwl_loader:_load_cwl_from_stream:229 - Reading stream from https://raw.githubusercontent.com/eoap/application-package-patterns/refs/heads/main/cwl-workflow/pattern-1.cwl...\n</pre> <pre>2025-09-30 08:09:36.325 | DEBUG    | cwl_loader:load_cwl_from_stream:201 - CWL data of type &lt;class 'ruamel.yaml.comments.CommentedMap'&gt; successfully loaded from stream\n</pre> <pre>2025-09-30 08:09:36.326 | DEBUG    | cwl_loader:load_cwl_from_yaml:128 - Updating the model from version 'v1.0' to version 'v1.2'...\n</pre> <pre>2025-09-30 08:09:36.327 | DEBUG    | cwl_loader:load_cwl_from_yaml:139 - Raw CWL document successfully updated to v1.2!\n</pre> <pre>2025-09-30 08:09:36.327 | DEBUG    | cwl_loader:load_cwl_from_yaml:143 - Parsing the raw CWL document to the CWL Utils DOM...\n</pre> <pre>2025-09-30 08:09:36.504 | DEBUG    | cwl_loader:load_cwl_from_yaml:156 - Raw CWL document successfully parsed to the CWL Utils DOM!\n</pre> <pre>2025-09-30 08:09:36.504 | DEBUG    | cwl_loader:load_cwl_from_yaml:158 - Dereferencing the steps[].run...\n</pre> <pre>2025-09-30 08:09:36.505 | DEBUG    | cwl_loader:_on_process:76 - Checking if https://raw.githubusercontent.com/eoap/application-package-patterns/refs/heads/main/cwl-workflow/pattern-1.cwl#clt must be externally imported...\n</pre> <pre>2025-09-30 08:09:36.506 | DEBUG    | cwl_loader:_on_process:80 - run_url: https://raw.githubusercontent.com/eoap/application-package-patterns/refs/heads/main/cwl-workflow/pattern-1.cwl - uri: https://raw.githubusercontent.com/eoap/application-package-patterns/refs/heads/main/cwl-workflow/pattern-1.cwl\n</pre> <pre>2025-09-30 08:09:36.506 | DEBUG    | cwl_loader:load_cwl_from_yaml:165 - steps[].run successfully dereferenced! Dereferencing the FQNs...\n</pre> <pre>2025-09-30 08:09:36.506 | DEBUG    | cwl_loader:load_cwl_from_yaml:169 - CWL document successfully dereferenced! Now verifying steps[].run integrity...\n</pre> <pre>2025-09-30 08:09:36.507 | DEBUG    | cwl_loader:load_cwl_from_yaml:173 - All steps[].run link are resolvable! \n</pre> <pre>2025-09-30 08:09:36.507 | DEBUG    | cwl_loader:load_cwl_from_yaml:176 - Sorting Process instances by dependencies....\n</pre> <pre>2025-09-30 08:09:36.508 | DEBUG    | cwl_loader:load_cwl_from_yaml:178 - Sorting process is over.\n</pre> <pre>2025-09-30 08:09:36.508 | DEBUG    | cwl_loader:_load_cwl_from_stream:238 - Stream from https://raw.githubusercontent.com/eoap/application-package-patterns/refs/heads/main/cwl-workflow/pattern-1.cwl successfully load!\n</pre> <pre>2025-09-30 08:09:36.509 | DEBUG    | cwl_loader:load_cwl_from_location:226 - Loading CWL document from https://raw.githubusercontent.com/eoap/application-package-patterns/refs/heads/main/templates/stage-out.cwl...\n</pre> <pre>2025-09-30 08:09:36.633 | DEBUG    | cwl_loader:_load_cwl_from_stream:229 - Reading stream from https://raw.githubusercontent.com/eoap/application-package-patterns/refs/heads/main/templates/stage-out.cwl...\n</pre> <pre>2025-09-30 08:09:36.642 | DEBUG    | cwl_loader:load_cwl_from_stream:201 - CWL data of type &lt;class 'ruamel.yaml.comments.CommentedMap'&gt; successfully loaded from stream\n</pre> <pre>2025-09-30 08:09:36.643 | DEBUG    | cwl_loader:load_cwl_from_yaml:128 - Updating the model from version 'v1.0' to version 'v1.2'...\n</pre> <pre>2025-09-30 08:09:36.643 | DEBUG    | cwl_loader:load_cwl_from_yaml:139 - Raw CWL document successfully updated to v1.2!\n</pre> <pre>2025-09-30 08:09:36.644 | DEBUG    | cwl_loader:load_cwl_from_yaml:143 - Parsing the raw CWL document to the CWL Utils DOM...\n</pre> <pre>2025-09-30 08:09:37.002 | DEBUG    | cwl_loader:load_cwl_from_yaml:156 - Raw CWL document successfully parsed to the CWL Utils DOM!\n</pre> <pre>2025-09-30 08:09:37.003 | DEBUG    | cwl_loader:load_cwl_from_yaml:158 - Dereferencing the steps[].run...\n</pre> <pre>2025-09-30 08:09:37.003 | DEBUG    | cwl_loader:load_cwl_from_yaml:165 - steps[].run successfully dereferenced! Dereferencing the FQNs...\n</pre> <pre>2025-09-30 08:09:37.004 | DEBUG    | cwl_loader:load_cwl_from_yaml:169 - CWL document successfully dereferenced! Now verifying steps[].run integrity...\n</pre> <pre>2025-09-30 08:09:37.005 | DEBUG    | cwl_loader:load_cwl_from_yaml:173 - All steps[].run link are resolvable! \n</pre> <pre>2025-09-30 08:09:37.006 | DEBUG    | cwl_loader:load_cwl_from_yaml:176 - Sorting Process instances by dependencies....\n</pre> <pre>2025-09-30 08:09:37.006 | DEBUG    | cwl_loader:load_cwl_from_yaml:178 - Sorting process is over.\n</pre> <pre>2025-09-30 08:09:37.007 | DEBUG    | cwl_loader:_load_cwl_from_stream:238 - Stream from https://raw.githubusercontent.com/eoap/application-package-patterns/refs/heads/main/templates/stage-out.cwl successfully load!\n</pre> <pre>2025-09-30 08:09:37.007 | DEBUG    | eoap_cwlwrap:_load_process_from_location:500 - 'stage-out' from https://raw.githubusercontent.com/eoap/application-package-patterns/refs/heads/main/templates/stage-out.cwl is a valid single 'Process'\n</pre> <pre>2025-09-30 08:09:37.008 | DEBUG    | cwl_loader:load_cwl_from_location:226 - Loading CWL document from https://raw.githubusercontent.com/eoap/application-package-patterns/refs/heads/main/templates/stage-in.cwl...\n</pre> <pre>2025-09-30 08:09:37.163 | DEBUG    | cwl_loader:_load_cwl_from_stream:229 - Reading stream from https://raw.githubusercontent.com/eoap/application-package-patterns/refs/heads/main/templates/stage-in.cwl...\n</pre> <pre>2025-09-30 08:09:37.170 | DEBUG    | cwl_loader:load_cwl_from_stream:201 - CWL data of type &lt;class 'ruamel.yaml.comments.CommentedMap'&gt; successfully loaded from stream\n</pre> <pre>2025-09-30 08:09:37.171 | DEBUG    | cwl_loader:load_cwl_from_yaml:128 - Updating the model from version 'v1.0' to version 'v1.2'...\n</pre> <pre>2025-09-30 08:09:37.171 | DEBUG    | cwl_loader:load_cwl_from_yaml:139 - Raw CWL document successfully updated to v1.2!\n</pre> <pre>2025-09-30 08:09:37.172 | DEBUG    | cwl_loader:load_cwl_from_yaml:143 - Parsing the raw CWL document to the CWL Utils DOM...\n</pre> <pre>2025-09-30 08:09:37.319 | DEBUG    | cwl_loader:load_cwl_from_yaml:156 - Raw CWL document successfully parsed to the CWL Utils DOM!\n</pre> <pre>2025-09-30 08:09:37.319 | DEBUG    | cwl_loader:load_cwl_from_yaml:158 - Dereferencing the steps[].run...\n</pre> <pre>2025-09-30 08:09:37.320 | DEBUG    | cwl_loader:load_cwl_from_yaml:165 - steps[].run successfully dereferenced! Dereferencing the FQNs...\n</pre> <pre>2025-09-30 08:09:37.320 | DEBUG    | cwl_loader:load_cwl_from_yaml:169 - CWL document successfully dereferenced! Now verifying steps[].run integrity...\n</pre> <pre>2025-09-30 08:09:37.321 | DEBUG    | cwl_loader:load_cwl_from_yaml:173 - All steps[].run link are resolvable! \n</pre> <pre>2025-09-30 08:09:37.321 | DEBUG    | cwl_loader:load_cwl_from_yaml:176 - Sorting Process instances by dependencies....\n</pre> <pre>2025-09-30 08:09:37.321 | DEBUG    | cwl_loader:load_cwl_from_yaml:178 - Sorting process is over.\n</pre> <pre>2025-09-30 08:09:37.322 | DEBUG    | cwl_loader:_load_cwl_from_stream:238 - Stream from https://raw.githubusercontent.com/eoap/application-package-patterns/refs/heads/main/templates/stage-in.cwl successfully load!\n</pre> <pre>2025-09-30 08:09:37.322 | DEBUG    | eoap_cwlwrap:_load_process_from_location:500 - 'directory-stage-in' from https://raw.githubusercontent.com/eoap/application-package-patterns/refs/heads/main/templates/stage-in.cwl is a valid single 'Process'\n</pre> <pre>2025-09-30 08:09:37.323 | INFO     | eoap_cwlwrap.types:_validate_stage_in:270 - Validating stage-in 'my-asthonishing-stage-in-directory'...\n</pre> <pre>2025-09-30 08:09:37.323 | INFO     | eoap_cwlwrap.types:_validate_stage_in:292 - stage-in 'my-asthonishing-stage-in-directory' is valid\n</pre> <pre>2025-09-30 08:09:37.324 | INFO     | eoap_cwlwrap.types:validate_stage_out:328 - Validating stage-out 'my-super-stage-out'...\n</pre> <pre>2025-09-30 08:09:37.324 | INFO     | eoap_cwlwrap.types:validate_stage_out:350 - stage-out 'my-super-stage-out' is valid\n</pre> <pre>2025-09-30 08:09:37.324 | INFO     | eoap_cwlwrap:_build_orchestrator_workflow:99 - Building the CWL Orchestrator Workflow...\n</pre> <pre>2025-09-30 08:09:37.325 | INFO     | eoap_cwlwrap:_build_orchestrator_workflow:128 - Analyzing pattern-1 inputs...\n</pre> <pre>2025-09-30 08:09:37.326 | INFO     | eoap_cwlwrap:_build_orchestrator_workflow:144 - * pattern-1/aoi: string\n</pre> <pre>2025-09-30 08:09:37.326 | INFO     | eoap_cwlwrap:_build_orchestrator_workflow:144 - * pattern-1/epsg: string\n</pre> <pre>2025-09-30 08:09:37.327 | INFO     | eoap_cwlwrap:_build_orchestrator_workflow:144 - * pattern-1/bands: string[]\n</pre> <pre>2025-09-30 08:09:37.327 | INFO     | eoap_cwlwrap:_build_orchestrator_workflow:144 - * pattern-1/item: Directory\n</pre> <pre>2025-09-30 08:09:37.328 | INFO     | eoap_cwlwrap:_build_orchestrator_workflow:157 -   Directory type detected, creating a related 'directory_stage_in_0'...\n</pre> <pre>2025-09-30 08:09:37.328 | INFO     | eoap_cwlwrap:_build_orchestrator_workflow:159 -   Converting Directory to URL-compatible type...\n</pre> <pre>2025-09-30 08:09:37.329 | INFO     | eoap_cwlwrap:_build_orchestrator_workflow:163 -   Directory converted to https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#URI\n</pre> <pre>2025-09-30 08:09:37.329 | INFO     | eoap_cwlwrap:_build_orchestrator_workflow:204 -   Connecting 'app/item' to 'directory_stage_in_0' output...\n</pre> <pre>2025-09-30 08:09:37.330 | INFO     | eoap_cwlwrap:_build_orchestrator_workflow:255 - Analyzing pattern-1 outputs...\n</pre> <pre>2025-09-30 08:09:37.330 | INFO     | eoap_cwlwrap:_build_orchestrator_workflow:261 - * pattern-1/water_bodies: Directory\n</pre> <pre>2025-09-30 08:09:37.331 | INFO     | eoap_cwlwrap:_build_orchestrator_workflow:266 -   Directory type detected, creating a related 'stage_out_0'...\n</pre> <pre>2025-09-30 08:09:37.331 | INFO     | eoap_cwlwrap:_build_orchestrator_workflow:268 -   Converting Directory to URL-compatible type...\n</pre> <pre>2025-09-30 08:09:37.332 | INFO     | eoap_cwlwrap:_build_orchestrator_workflow:272 -   Directory converted to https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#URI\n</pre> <pre>2025-09-30 08:09:37.334 | INFO     | eoap_cwlwrap:_build_orchestrator_workflow:313 -   Connecting 'app/water_bodies' to 'stage_out_0' output...\n</pre> <pre>2025-09-30 08:09:37.334 | INFO     | eoap_cwlwrap:_build_orchestrator_workflow:388 - Orchestrator Workflow built in 0.0098 seconds\n</pre> In\u00a0[2]: Copied! <pre>import sys\n\ndump_cwl(main_workflow, sys.stderr)\n</pre> import sys  dump_cwl(main_workflow, sys.stderr) <pre>cwlVersion: v1.2\n$graph:\n- id: pattern-1\n  class: Workflow\n  label: Water bodies detection based on NDWI and the otsu threshold\n  doc: Water bodies detection based on NDWI and otsu threshold applied to a \n    single Landsat-8/9 acquisition\n  inputs:\n  - id: aoi\n    label: area of interest\n    doc: area of interest as a bounding box\n    default: -118.985,38.432,-118.183,38.938\n    type: string\n  - id: epsg\n    label: EPSG code\n    doc: EPSG code\n    default: EPSG:4326\n    type: string\n  - id: bands\n    label: bands used for the NDWI\n    doc: bands used for the NDWI\n    default:\n    - green\n    - nir08\n    type:\n      name: _:ba188019-84c1-463d-bbba-e3dd7b100a98\n      items: string\n      type: array\n  - id: item\n    label: Landsat-8/9 acquisition reference\n    doc: Landsat-8/9 acquisition reference\n    type: Directory\n  outputs:\n  - id: water_bodies\n    label: Water bodies detected\n    doc: Water bodies detected based on the NDWI and otsu threshold\n    outputSource:\n    - step/stac-catalog\n    type: Directory\n  requirements: []\n  cwlVersion: v1.2\n  steps:\n  - id: step\n    label: Water bodies detection\n    doc: Water bodies detection based on NDWI and otsu threshold applied to a \n      single Landsat-8/9 acquisition\n    in:\n    - id: item\n      source: item\n    - id: aoi\n      source: aoi\n    - id: epsg\n      source: epsg\n    - id: band\n      source: bands\n    out:\n    - stac-catalog\n    run: '#clt'\n  $namespaces: &amp;id001\n    s: https://schema.org/\n\n- id: main\n  class: Workflow\n  label: Workflow pattern-1 orchestrator\n  doc: This Workflow is used to orchestrate the Workflow pattern-1\n  inputs:\n  - id: aoi\n    label: area of interest - pattern-1/aoi\n    doc: area of interest as a bounding box - This parameter is derived from \n      pattern-1/aoi\n    default: -118.985,38.432,-118.183,38.938\n    type: string\n  - id: epsg\n    label: EPSG code - pattern-1/epsg\n    doc: EPSG code - This parameter is derived from pattern-1/epsg\n    default: EPSG:4326\n    type: string\n  - id: bands\n    label: bands used for the NDWI - pattern-1/bands\n    doc: bands used for the NDWI - This parameter is derived from \n      pattern-1/bands\n    default:\n    - green\n    - nir08\n    type:\n      name: _:ba188019-84c1-463d-bbba-e3dd7b100a98\n      items: string\n      type: array\n  - id: another_input\n    label: Another Input - my-asthonishing-stage-in-directory/another_input\n    doc: An additional input for demonstration purposes - This parameter is \n      derived from my-asthonishing-stage-in-directory/another_input\n    type: string\n  - id: item\n    label: Landsat-8/9 acquisition reference - pattern-1/item\n    doc: Landsat-8/9 acquisition reference - This parameter is derived from \n      pattern-1/item\n    type: \n      https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#URI\n  - id: s3_bucket\n    label: my-super-stage-out/s3_bucket\n    doc: 'This parameter is derived </pre> <pre>from: my-super-stage-out/s3_bucket'\n    type: string\n  - id: sub_path\n    label: my-super-stage-out/sub_path\n    doc: 'This parameter is derived from: my-super-stage-out/sub_path'\n    type: string\n  - id: aws_access_key_id\n    label: my-super-stage-out/aws_access_key_id\n    doc: 'This parameter is derived from: my-super-stage-out/aws_access_key_id'\n    type: string\n  - id: aws_secret_access_key\n    label: my-super-stage-out/aws_secret_access_key\n    doc: 'This parameter is derived from: my-super-stage-out/aws_secret_access_key'\n    type: string\n  - id: region_name\n    label: my-super-stage-out/region_name\n    doc: 'This parameter is derived from: my-super-stage-out/region_name'\n    type: string\n  - id: endpoint_url\n    label: my-super-stage-out/endpoint_url\n    doc: 'This parameter is derived from: my-super-stage-out/endpoint_url'\n    type: string\n  outputs:\n  - id: water_bodies\n    label: Water bodies detected\n    doc: Water bodies detected based on the NDWI and otsu threshold\n    outputSource: stage_out_0/s3_catalog_output\n    type: \n      https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#URI\n  requirements:\n  - class: SubworkflowFeatureRequirement\n  - class: SchemaDefRequirement\n    types:\n    - $import: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml\n  steps:\n  - id: directory_stage_in_0\n    in:\n    - id: reference\n      source: item\n    - id: another_input\n      source: another_input\n    out:\n    - staged\n    run: '#my-asthonishing-stage-in-directory'\n  - id: app</pre> <pre>\n    in:\n    - id: aoi\n      source: aoi\n    - id: epsg\n      source: epsg\n    - id: bands\n      source: bands\n    - id: item\n      source: directory_stage_in_0/staged\n    out:\n    - water_bodies\n    run: '#pattern-1'\n  - id: stage_out_0\n    in:\n    - id: s3_bucket\n      source: s3_bucket\n    - id: sub_path\n      source: sub_path\n    - id: aws_access_key_id\n      source: aws_access_key_id\n    - id: aws_secret_access_key\n      source: aws_secret_access_key\n    - id: region_name\n      source: region_name\n    - id: endpoint_url\n      source: endpoint_url\n    - id: stac_catalog\n      source: app/water_bodies\n    out:\n    - s3_catalog_output\n    run: '#my-super-stage-out'\n- id: my-asthonishing-stage-in-directory\n  class: CommandLineTool\n  inputs:\n  - id: reference\n    label: STAC Item URL\n    doc: A STAC Item to stage\n    type: \n      https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#URI\n  - id: another_input\n    label: Another Input\n    doc: An additional input for demonstration purposes\n    type: string\n  outputs:\n  - id: staged\n    type: Directory\n    outputBinding:\n      glob: .\n  requirements:\n  - class: NetworkAccess\n    networkAccess: true\n  - class: SchemaDefRequirement\n    types:\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#Date\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#Date/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#DateTime\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#DateTime/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#Duration\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#Duration/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#Email\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#Email/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#Hostname\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#Hostname/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#IDNEmail\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#IDNEmail/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#IDNHostname\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#IDNHostname/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#IPv4\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#IPv4/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#IPv6\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#IPv6/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#IRI\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#IRI/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#IRIReference\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#IRIReference/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#JsonPointer\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#JsonPointer/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#Password\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#Password/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#RelativeJsonPointer\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#RelativeJsonPointer/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#UUID\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#UUID/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#URI\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#URI/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#URIReference\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#URIReference/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#URITemplate\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#URITemplate/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#Time\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#Time/value\n        type: string\n      type: record\n  - class: DockerRequirement\n    dockerPull: ghcr.io/eoap/mastering-app-package/stage:1.0.0\n  - class: InlineJavascriptRequirement\n  - class: InitialWorkDirRequirement\n    listing:\n    - entryname: stage.py\n      entry: |-\n        import pystac\n        import stac_asset\n        import asyncio\n        import os\n        import sys\n\n        config = stac_asset.Config(warn=True)\n\n        async def main(href: str):\n            \n            item = pystac.read_file(href)\n            \n            os.makedirs(item.id, exist_ok=True)\n            cwd = os.getcwd()\n            \n            os.chdir(item.id)\n            item = await stac_asset.download_item(item=item, directory=\".\", config=config)\n            os.chdir(cwd)\n            \n            cat = pystac.Catalog(\n                id=\"catalog\",\n                description=f\"catalog with staged {item.id}\",\n                title=f\"catalog with staged {item.id}\",\n            )\n            cat.add_item(item)\n            \n            cat.normalize_hrefs(\"./\")\n            cat.save(catalog_type=pystac.CatalogType.SELF_CONTAINED)\n\n            return cat\n\n        href = sys.argv[1]\n        empty_arg = sys.argv[2]\n\n        cat = asyncio.run(main(href))\n  cwlVersion: v1.2\n  baseCommand:\n  - python\n  - stage.py\n  arguments:\n  - $( inputs.reference.value )\n  - $( inputs.another_input )\n- id: my-super-stage-out\n  class: CommandLineTool\n  doc: Stage-out the results to S3\n  inputs:\n  - id: s3_bucket\n    type: string\n  - id: sub_path\n    type: string\n  - id: aws_access_key_id\n    type: string\n  - id: aws_secret_access_key\n    type: string\n  - id: region_name\n    type: string\n  - id: endpoint_url\n    type: string\n  - id: stac_catalog\n    label: STAC Catalog folder\n    doc: The folder containing the STAC catalog to stage out\n    type: Directory\n  outputs:\n  - id: s3_catalog_output\n    type: \n      https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#URI\n    outputBinding:\n      loadContents: true\n      glob: catalog-uri.txt\n      outputEval: |\n        ${ \n          return { \"value\": self[0].contents, \"type\": \"https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#URI\" };\n        }\n  requirements:\n  - class: NetworkAccess\n    networkAccess: true\n  - class: SchemaDefRequirement\n    types:\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#Date\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#Date/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#DateTime\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#DateTime/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#Duration\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#Duration/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#Email\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#Email/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#Hostname\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#Hostname/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#IDNEmail\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#IDNEmail/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#IDNHostname\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#IDNHostname/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#IPv4\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#IPv4/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#IPv6\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#IPv6/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#IRI\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#IRI/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#IRIReference\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#IRIReference/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#JsonPointer\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#JsonPointer/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#Password\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#Password/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#RelativeJsonPointer\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#RelativeJsonPointer/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#UUID\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#UUID/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#URI\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#URI/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#URIReference\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#URIReference/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#URITemplate\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#URITemplate/value\n        type: string\n      type: record\n    - name: \n        https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#Time\n      fields:\n      - name: \n          https://raw.githubusercontent.com/eoap/schemas/main/string_format.yaml#Time/value\n        type: string\n      type: record\n  - class: DockerRequirement\n    dockerPull: ghcr.io/eoap/mastering-app-package/stage:1.0.0\n  - class: InlineJavascriptRequirement\n  - class: EnvVarRequirement\n    envDef:\n    - envName: aws_access_key_id\n      envValue: $( inputs.aws_access_key_id )\n    - envName: aws_secret_access_key\n      envValue: $( inputs.aws_secret_access_key )\n    - envName: aws_region_name\n      envValue: $( inputs.region_name )\n    - envName: aws_endpoint_url\n      envValue: $( inputs.endpoint_url )\n  - class: ResourceRequirement\n  - class: InitialWorkDirRequirement\n    listing:\n    - entryname: stage.py\n      entry: |-\n        import os\n        import sys\n        import pystac\n        import botocore\n        import boto3\n        import shutil\n        from pystac.stac_io import DefaultStacIO, StacIO\n        from urllib.parse import urlparse\n\n        cat_url = sys.argv[1]\n        bucket = sys.argv[2]\n        subfolder = sys.argv[3]\n\n        aws_access_key_id = os.environ[\"aws_access_key_id\"]\n        aws_secret_access_key = os.environ[\"aws_secret_access_key\"]\n        region_name = os.environ[\"aws_region_name\"]\n        endpoint_url = os.environ[\"aws_endpoint_url\"]\n\n        shutil.copytree(cat_url, \"/tmp/catalog\")\n        cat = pystac.read_file(os.path.join(\"/tmp/catalog\", \"catalog.json\"))\n\n        class CustomStacIO(DefaultStacIO):\n            \"\"\"Custom STAC IO class that uses boto3 to read from S3.\"\"\"\n\n            def __init__(self):\n                self.session = botocore.session.Session()\n                self.s3_client = self.session.create_client(\n                    service_name=\"s3\",\n                    use_ssl=True,\n                    aws_access_key_id=aws_access_key_id,\n                    aws_secret_access_key=aws_secret_access_key,\n                    endpoint_url=endpoint_url,\n                    region_name=region_name,\n                )\n\n            def write_text(self, dest, txt, *args, **kwargs):\n                parsed = urlparse(dest)\n                if parsed.scheme == \"s3\":\n                    self.s3_client.put_object(\n                        Body=txt.encode(\"UTF-8\"),\n                        Bucket=parsed.netloc,\n                        Key=parsed.path[1:],\n                        ContentType=\"application/geo+json\",\n                    )\n                else:\n                    super().write_text(dest, txt, *args, **kwargs)\n\n\n        # client = boto3.client(\n        #     \"s3\",\n        #     aws_access_key_id=aws_access_key_id,\n        #     aws_secret_access_key=aws_secret_access_key,\n        #     endpoint_url=endpoint_url,\n        #     region_name=region_name,\n        # )\n\n        # StacIO.set_default(CustomStacIO)\n\n        # for item in cat.get_items():\n        #     for key, asset in item.get_assets().items():\n        #         s3_path = os.path.normpath(\n        #             os.path.join(os.path.join(subfolder, item.id, asset.href))\n        #         )\n        #         print(f\"upload {asset.href} to s3://{bucket}/{s3_path}\",file=sys.stderr)\n        #         client.upload_file(\n        #             asset.get_absolute_href(),\n        #             bucket,\n        #             s3_path,\n        #         )\n        #         asset.href = f\"s3://{bucket}/{s3_path}\"\n        #         item.add_asset(key, asset)\n\n        # cat.normalize_hrefs(f\"s3://{bucket}/{subfolder}\")\n\n        # for item in cat.get_items():\n        #     # upload item to S3\n        #     print(f\"upload {item.id} to s3://{bucket}/{subfolder}\", file=sys.stderr)\n        #     pystac.write_file(item, item.get_self_href())\n\n        # # upload catalog to S3\n        # print(f\"upload catalog.json to s3://{bucket}/{subfolder}\", file=sys.stderr)\n        # pystac.write_file(cat, cat.get_self_href())\n\n        print(f\"s3://{bucket}/{subfolder}/catalog.json\", end=\"\", file=sys.stdout)\n  cwlVersion: v1.2\n  baseCommand:\n  - python\n  - stage.py\n  arguments:\n  - $( inputs.stac_catalog.path )\n  - $( inputs.s3_bucket )\n  - ${ var firstPart = (Math.random() * 46656) | 0; var secondPart = \n    (Math.random() * 46656) | 0; firstPart = (\"000\" + \n    firstPart.toString(36)).slice(-3); secondPart = (\"000\" + \n    secondPart.toString(36)).slice(-3); return inputs.sub_path + \"-\" + firstPart\n    + secondPart; }\n  stdout: catalog-uri.txt\n- id: clt\n  class: CommandLineTool\n  inputs:\n  - id: item\n    type: Directory\n    inputBinding:\n      prefix: --input-item\n  - id: aoi\n    type: string\n    inputBinding:\n      prefix: --aoi\n  - id: epsg\n    type: string\n    inputBinding:\n      prefix: --epsg\n  - id: band\n    type:\n    - name: _:f763cfce-a8e0-4360-9884-4fdee1bd1b69\n      items: string\n      type: array\n      inputBinding:\n        prefix: --band\n  outputs:\n  - id: stac-catalog\n    type: Directory\n    outputBinding:\n      glob: .\n  requirements:\n  - class: InlineJavascriptRequirement\n  - class: EnvVarRequirement\n    envDef:\n    - envName: PATH\n      envValue: /app/envs/runner/bin\n  - class: ResourceRequirement\n    coresMax: 1\n    ramMax: 512\n  hints:\n  - class: DockerRequirement\n    dockerPull: ghcr.io/eoap/application-package-patterns/runner:0.2.0\n  cwlVersion: v1.2\n  baseCommand:\n  - runner\n  arguments:\n  - pattern-1\n  $namespaces: *id001\n</pre>"},{"location":"example/#a-simple-example-pattern-1-single-input-single-output","title":"A simple example: Pattern 1 - single input, single output\u00b6","text":"<p>The CWL includes:</p> <ul> <li>input parameter of type <code>Directory</code>;</li> <li>output parameter of type <code>Directory</code>.</li> </ul>"},{"location":"example/#building-the-worflow","title":"Building the Worflow\u00b6","text":""},{"location":"example/#check-the-generated-cwl-document","title":"Check the generated CWL Document\u00b6","text":""},{"location":"api/latest/eoap_cwlwrap/","title":"Module eoap_cwlwrap","text":"<p>EOAP CWLWrap is a command-line utility that composes a CWL <code>Workflow</code> from a series of <code>Workflow</code>/<code>CommandLineTool</code> steps, defined according to Application package patterns based on data stage-in and stage-out behaviors commonly used in EO workflows, and packs it into a single self-contained CWL document.</p> <p>EOAP CWLWrap (c) 2025</p> <p>EOAP CWLWrap is licensed under Creative Commons Attribution-ShareAlike 4.0 International.</p> <p>You should have received a copy of the license along with this work. If not, see https://creativecommons.org/licenses/by-sa/4.0/.</p>"},{"location":"api/latest/eoap_cwlwrap/#sub-modules","title":"Sub-modules","text":"<ul> <li>eoap_cwlwrap.builder</li> <li>eoap_cwlwrap.types</li> </ul>"},{"location":"api/latest/eoap_cwlwrap/#variables","title":"Variables","text":"<pre><code>URL_SCHEMA\n</code></pre>"},{"location":"api/latest/eoap_cwlwrap/#functions","title":"Functions","text":""},{"location":"api/latest/eoap_cwlwrap/#wrap","title":"wrap","text":"<pre><code>def wrap(\n    workflows: Union[cwl_utils.parser.cwl_v1_0.Workflow, cwl_utils.parser.cwl_v1_1.Workflow, cwl_utils.parser.cwl_v1_2.Workflow, cwl_utils.parser.cwl_v1_0.CommandLineTool, cwl_utils.parser.cwl_v1_1.CommandLineTool, cwl_utils.parser.cwl_v1_2.CommandLineTool, cwl_utils.parser.cwl_v1_0.ExpressionTool, cwl_utils.parser.cwl_v1_1.ExpressionTool, cwl_utils.parser.cwl_v1_2.ExpressionTool, cwl_utils.parser.cwl_v1_2.Operation, List[Union[cwl_utils.parser.cwl_v1_0.Workflow, cwl_utils.parser.cwl_v1_1.Workflow, cwl_utils.parser.cwl_v1_2.Workflow, cwl_utils.parser.cwl_v1_0.CommandLineTool, cwl_utils.parser.cwl_v1_1.CommandLineTool, cwl_utils.parser.cwl_v1_2.CommandLineTool, cwl_utils.parser.cwl_v1_0.ExpressionTool, cwl_utils.parser.cwl_v1_1.ExpressionTool, cwl_utils.parser.cwl_v1_2.ExpressionTool, cwl_utils.parser.cwl_v1_2.Operation]]],\n    workflow_id: str,\n    stage_out: Union[cwl_utils.parser.cwl_v1_0.Workflow, cwl_utils.parser.cwl_v1_1.Workflow, cwl_utils.parser.cwl_v1_2.Workflow, cwl_utils.parser.cwl_v1_0.CommandLineTool, cwl_utils.parser.cwl_v1_1.CommandLineTool, cwl_utils.parser.cwl_v1_2.CommandLineTool, cwl_utils.parser.cwl_v1_0.ExpressionTool, cwl_utils.parser.cwl_v1_1.ExpressionTool, cwl_utils.parser.cwl_v1_2.ExpressionTool, cwl_utils.parser.cwl_v1_2.Operation],\n    directory_stage_in: Union[cwl_utils.parser.cwl_v1_0.Workflow, cwl_utils.parser.cwl_v1_1.Workflow, cwl_utils.parser.cwl_v1_2.Workflow, cwl_utils.parser.cwl_v1_0.CommandLineTool, cwl_utils.parser.cwl_v1_1.CommandLineTool, cwl_utils.parser.cwl_v1_2.CommandLineTool, cwl_utils.parser.cwl_v1_0.ExpressionTool, cwl_utils.parser.cwl_v1_1.ExpressionTool, cwl_utils.parser.cwl_v1_2.ExpressionTool, cwl_utils.parser.cwl_v1_2.Operation, NoneType] = None,\n    file_stage_in: Union[cwl_utils.parser.cwl_v1_0.Workflow, cwl_utils.parser.cwl_v1_1.Workflow, cwl_utils.parser.cwl_v1_2.Workflow, cwl_utils.parser.cwl_v1_0.CommandLineTool, cwl_utils.parser.cwl_v1_1.CommandLineTool, cwl_utils.parser.cwl_v1_2.CommandLineTool, cwl_utils.parser.cwl_v1_0.ExpressionTool, cwl_utils.parser.cwl_v1_1.ExpressionTool, cwl_utils.parser.cwl_v1_2.ExpressionTool, cwl_utils.parser.cwl_v1_2.Operation, NoneType] = None\n) -&gt; List[Union[cwl_utils.parser.cwl_v1_0.Workflow, cwl_utils.parser.cwl_v1_1.Workflow, cwl_utils.parser.cwl_v1_2.Workflow, cwl_utils.parser.cwl_v1_0.CommandLineTool, cwl_utils.parser.cwl_v1_1.CommandLineTool, cwl_utils.parser.cwl_v1_2.CommandLineTool, cwl_utils.parser.cwl_v1_0.ExpressionTool, cwl_utils.parser.cwl_v1_1.ExpressionTool, cwl_utils.parser.cwl_v1_2.ExpressionTool, cwl_utils.parser.cwl_v1_2.Operation]]\n</code></pre> <p>Composes a CWL <code>Workflow</code> from a series of <code>Workflow</code>/<code>CommandLineTool</code> steps, defined according to Application package patterns based on data stage-in and stage-out behaviors commonly used in EO workflows, and packs it into a single self-contained CWL document.</p> <p>Parameters:</p> Name Type Description Default <code>workflows</code> <code>Process | List[Process]</code> The CWL document object model (or models, if the CWl is a <code>$graph</code>) None <code>workflow_id</code> <code>str</code> ID of the workflow None <code>stage_out</code> <code>Workflow</code> The CWL stage-out document object model None <code>directory_stage_in</code> <code>Optional[Workflow]</code> The CWL stage-in file for <code>Directory</code> derived types None <code>file_stage_in</code> <code>Optional[Workflow]</code> The CWL stage-in file for <code>File</code> derived types None <p>Returns:</p> Type Description <code>list[Workflow]</code> The composed CWL <code>$graph</code>."},{"location":"api/latest/eoap_cwlwrap/#wrap_locations","title":"wrap_locations","text":"<pre><code>def wrap_locations(\n    workflows: str,\n    workflow_id: str,\n    stage_out: str,\n    directory_stage_in: Optional[str] = None,\n    file_stage_in: Optional[str] = None\n) -&gt; List[Union[cwl_utils.parser.cwl_v1_0.Workflow, cwl_utils.parser.cwl_v1_1.Workflow, cwl_utils.parser.cwl_v1_2.Workflow, cwl_utils.parser.cwl_v1_0.CommandLineTool, cwl_utils.parser.cwl_v1_1.CommandLineTool, cwl_utils.parser.cwl_v1_2.CommandLineTool, cwl_utils.parser.cwl_v1_0.ExpressionTool, cwl_utils.parser.cwl_v1_1.ExpressionTool, cwl_utils.parser.cwl_v1_2.ExpressionTool, cwl_utils.parser.cwl_v1_2.Operation]]\n</code></pre> <p>Composes a CWL <code>Workflow</code> from a series of <code>Workflow</code>/<code>CommandLineTool</code> steps, defined according to Application package patterns based on data stage-in and stage-out behaviors commonly used in EO workflows, and packs it into a single self-contained CWL document.</p> <p>Parameters:</p> Name Type Description Default <code>workflows</code> <code>str</code> The CWL document object model (or models, if the CWl is a <code>$graph</code>) None <code>workflow_id</code> <code>str</code> ID of the workflow None <code>stage_out</code> <code>str</code> The CWL stage-out document object model None <code>directory_stage_in</code> <code>Optional[str]</code> The CWL stage-in file for <code>Directory</code> derived types None <code>file_stage_in</code> <code>Optional[str]</code> The CWL stage-in file for <code>File</code> derived types None <p>Returns:</p> Type Description <code>List[Process]</code> The composed CWL <code>$graph</code>."},{"location":"api/latest/eoap_cwlwrap/#wrap_raw","title":"wrap_raw","text":"<pre><code>def wrap_raw(\n    workflows: Mapping[str, Any],\n    workflow_id: str,\n    stage_out: Mapping[str, Any],\n    directory_stage_in: Optional[Mapping[str, Any]] = None,\n    file_stage_in: Optional[Mapping[str, Any]] = None\n) -&gt; List[Union[cwl_utils.parser.cwl_v1_0.Workflow, cwl_utils.parser.cwl_v1_1.Workflow, cwl_utils.parser.cwl_v1_2.Workflow, cwl_utils.parser.cwl_v1_0.CommandLineTool, cwl_utils.parser.cwl_v1_1.CommandLineTool, cwl_utils.parser.cwl_v1_2.CommandLineTool, cwl_utils.parser.cwl_v1_0.ExpressionTool, cwl_utils.parser.cwl_v1_1.ExpressionTool, cwl_utils.parser.cwl_v1_2.ExpressionTool, cwl_utils.parser.cwl_v1_2.Operation]]\n</code></pre> <p>Composes a CWL <code>Workflow</code> from a series of <code>Workflow</code>/<code>CommandLineTool</code> steps, defined according to Application package patterns based on data stage-in and stage-out behaviors commonly used in EO workflows, and packs it into a single self-contained CWL document.</p> <p>Parameters:</p> Name Type Description Default <code>workflows</code> <code>Mapping[str, Any]</code> The CWL document object model (or models, if the CWl is a <code>$graph</code>) None <code>workflow_id</code> <code>str</code> ID of the workflow None <code>stage_out</code> <code>Mapping[str, Any]</code> The CWL stage-out document object model None <code>directory_stage_in</code> <code>Optional[Mapping[str, Any]]</code> The CWL stage-in file for <code>Directory</code> derived types None <code>file_stage_in</code> <code>Optional[Mapping[str, Any]]</code> The CWL stage-in file for <code>File</code> derived types None <p>Returns:</p> Type Description <code>List[Process]</code> The composed CWL <code>$graph</code>."},{"location":"api/latest/eoap_cwlwrap/builder/","title":"Module eoap_cwlwrap.builder","text":"<p>EOAP CWLWrap (c) 2025</p> <p>EOAP CWLWrap is licensed under Creative Commons Attribution-ShareAlike 4.0 International.</p> <p>You should have received a copy of the license along with this work. If not, see https://creativecommons.org/licenses/by-sa/4.0/.</p>"},{"location":"api/latest/eoap_cwlwrap/types/","title":"Module eoap_cwlwrap.types","text":"<p>EOAP CWLWrap (c) 2025</p> <p>EOAP CWLWrap is licensed under Creative Commons Attribution-ShareAlike 4.0 International.</p> <p>You should have received a copy of the license along with this work. If not, see https://creativecommons.org/licenses/by-sa/4.0/.</p>"},{"location":"api/latest/eoap_cwlwrap/types/#variables","title":"Variables","text":"<pre><code>Directory_or_File\n</code></pre> <p>A Directory Workflow or a File union type.</p> <pre><code>URL_SCHEMA\n</code></pre> <p>The URL of the string-format schema</p> <pre><code>URL_TYPE\n</code></pre> <p>The fully qualified name URI CWL type</p>"},{"location":"api/latest/eoap_cwlwrap/types/#functions","title":"Functions","text":""},{"location":"api/latest/eoap_cwlwrap/types/#get_assignable_type","title":"get_assignable_type","text":"<pre><code>def get_assignable_type(\n    actual: Any,\n    expected: Any\n) -&gt; Any\n</code></pre>"},{"location":"api/latest/eoap_cwlwrap/types/#is_array_type","title":"is_array_type","text":"<pre><code>def is_array_type(\n    typ: Any\n) -&gt; bool\n</code></pre> <p>Detects if the actual type can be assignable to <code>array</code> type.</p> <p>Parameters:</p> Name Type Description Default <code>typ</code> <code>Any</code> Any CWL type None <p>Returns:</p> Type Description <code>bool</code> <code>True</code>, if the input type can be assignable to the <code>array</code> type, <code>False</code> otherwise."},{"location":"api/latest/eoap_cwlwrap/types/#is_directory_compatible_type","title":"is_directory_compatible_type","text":"<pre><code>def is_directory_compatible_type(\n    typ: Any\n) -&gt; bool\n</code></pre> <p>Detects if the actual type can be assignable to <code>Directory</code> type.</p> <p>Parameters:</p> Name Type Description Default <code>typ</code> <code>Any</code> Any CWL type None <p>Returns:</p> Type Description <code>bool</code> <code>True</code>, if the input type can be assignable to the <code>Directory</code> type, <code>False</code> otherwise."},{"location":"api/latest/eoap_cwlwrap/types/#is_directory_or_file_compatible_type","title":"is_directory_or_file_compatible_type","text":"<pre><code>def is_directory_or_file_compatible_type(\n    typ: Any\n) -&gt; bool\n</code></pre> <p>Detects if the actual type can be assignable to <code>Directory</code> or <code>File</code> types.</p> <p>Parameters:</p> Name Type Description Default <code>typ</code> <code>Any</code> Any CWL type None <p>Returns:</p> Type Description <code>bool</code> <code>True</code>, if the input type can be assignable to the <code>Directory</code> or <code>File</code> types, <code>False</code> otherwise."},{"location":"api/latest/eoap_cwlwrap/types/#is_file_compatible_type","title":"is_file_compatible_type","text":"<pre><code>def is_file_compatible_type(\n    typ: Any\n) -&gt; bool\n</code></pre> <p>Detects if the actual type can be assignable to <code>File</code> type.</p> <p>Parameters:</p> Name Type Description Default <code>typ</code> <code>Any</code> Any CWL type None <p>Returns:</p> Type Description <code>bool</code> <code>True</code>, if the input type can be assignable to the <code>File</code> type, <code>False</code> otherwise."},{"location":"api/latest/eoap_cwlwrap/types/#is_nullable","title":"is_nullable","text":"<pre><code>def is_nullable(\n    typ: Any\n) -&gt; bool\n</code></pre> <p>Detects if the input type can be nullable.</p> <p>Parameters:</p> Name Type Description Default <code>typ</code> <code>Any</code> Any CWL type None <p>Returns:</p> Type Description <code>bool</code> <code>True</code>, if the input type can be nullable, <code>False</code> otherwise."},{"location":"api/latest/eoap_cwlwrap/types/#is_type_assignable_to","title":"is_type_assignable_to","text":"<pre><code>def is_type_assignable_to(\n    actual: Any,\n    expected: Any\n) -&gt; bool\n</code></pre> <p>Detects if the actual type can be assignable to the expected type.</p> <p>Parameters:</p> Name Type Description Default <code>actual</code> <code>Any</code> Any CWL type None <code>actual</code> <code>expected</code> Any CWL type None <p>Returns:</p> Type Description <code>bool</code> <code>True</code>, if the actual type can be assignable to the expected type, <code>False</code> otherwise."},{"location":"api/latest/eoap_cwlwrap/types/#is_uri_compatible_type","title":"is_uri_compatible_type","text":"<pre><code>def is_uri_compatible_type(\n    typ: Any\n) -&gt; bool\n</code></pre> <p>Detects if the actual type can be assignable to <code>https://raw.githubusercontent.com/eoap/schemas/refs/heads/main/string_format.yaml#URI</code> type.</p> <p>Parameters:</p> Name Type Description Default <code>typ</code> <code>Any</code> Any CWL type None <p>Returns:</p> Type Description <code>bool</code> <code>True</code>, if the input type can be assignable to <code>https://raw.githubusercontent.com/eoap/schemas/refs/heads/main/string_format.yaml#URI</code> type, <code>False</code> otherwise."},{"location":"api/latest/eoap_cwlwrap/types/#replace_directory_with_url","title":"replace_directory_with_url","text":"<pre><code>def replace_directory_with_url(\n    typ: Any\n) -&gt; Any\n</code></pre> <p>Deep replaces the <code>Directory</code> type in the source type with the <code>https://raw.githubusercontent.com/eoap/schemas/refs/heads/main/string_format.yaml#URI</code> type.</p> <p>Parameters:</p> Name Type Description Default <code>typ</code> <code>Any</code> Any CWL type None <p>Returns:</p> Type Description <code>Any</code> The new type."},{"location":"api/latest/eoap_cwlwrap/types/#replace_type_with_url","title":"replace_type_with_url","text":"<pre><code>def replace_type_with_url(\n    source: Any,\n    to_be_replaced: Any\n) -&gt; Any\n</code></pre> <p>Deep replaces any CWL type in the source type with the <code>https://raw.githubusercontent.com/eoap/schemas/refs/heads/main/string_format.yaml#URI</code> type.</p> <p>Parameters:</p> Name Type Description Default <code>source</code> <code>Any</code> Any CWL type None <code>to_be_replaced</code> <code>Any</code> The CWL type that has to be replaced None <p>Returns:</p> Type Description <code>Any</code> The new type."},{"location":"api/latest/eoap_cwlwrap/types/#type_to_string","title":"type_to_string","text":"<pre><code>def type_to_string(\n    typ: Any\n) -&gt; str\n</code></pre> <p>Serializes a CWL type to a human-readable string.</p> <p>Parameters:</p> Name Type Description Default <code>typ</code> <code>Any</code> Any CWL type None <p>Returns:</p> Type Description <code>str</code> The human-readable string representing the input CWL type."},{"location":"api/latest/eoap_cwlwrap/types/#validate_directory_stage_in","title":"validate_directory_stage_in","text":"<pre><code>def validate_directory_stage_in(\n    directory_stage_in: Union[cwl_utils.parser.cwl_v1_0.Workflow, cwl_utils.parser.cwl_v1_1.Workflow, cwl_utils.parser.cwl_v1_2.Workflow, cwl_utils.parser.cwl_v1_0.CommandLineTool, cwl_utils.parser.cwl_v1_1.CommandLineTool, cwl_utils.parser.cwl_v1_2.CommandLineTool, cwl_utils.parser.cwl_v1_0.ExpressionTool, cwl_utils.parser.cwl_v1_1.ExpressionTool, cwl_utils.parser.cwl_v1_2.ExpressionTool, cwl_utils.parser.cwl_v1_2.Operation]\n)\n</code></pre> <p>Checks if a CWL stage-in document is a <code>URI</code>-compatible input and <code>Directory</code>-compatible output <code>Process</code>.</p> <p>Parameters:</p> Name Type Description Default <code>directory_stage_in</code> <code>Process</code> Any CWL <code>Process</code> None <p>Returns:</p> Type Description <code>None</code> none."},{"location":"api/latest/eoap_cwlwrap/types/#validate_file_stage_in","title":"validate_file_stage_in","text":"<pre><code>def validate_file_stage_in(\n    file_stage_in: Union[cwl_utils.parser.cwl_v1_0.Workflow, cwl_utils.parser.cwl_v1_1.Workflow, cwl_utils.parser.cwl_v1_2.Workflow, cwl_utils.parser.cwl_v1_0.CommandLineTool, cwl_utils.parser.cwl_v1_1.CommandLineTool, cwl_utils.parser.cwl_v1_2.CommandLineTool, cwl_utils.parser.cwl_v1_0.ExpressionTool, cwl_utils.parser.cwl_v1_1.ExpressionTool, cwl_utils.parser.cwl_v1_2.ExpressionTool, cwl_utils.parser.cwl_v1_2.Operation]\n)\n</code></pre> <p>Checks if a CWL stage-in document is a <code>URI</code>-compatible input and <code>File</code>-compatible output <code>Process</code>.</p> <p>Parameters:</p> Name Type Description Default <code>file_stage_in</code> <code>Process</code> Any CWL <code>Process</code> None <p>Returns:</p> Type Description <code>None</code> none."},{"location":"api/latest/eoap_cwlwrap/types/#validate_stage_out","title":"validate_stage_out","text":"<pre><code>def validate_stage_out(\n    stage_out: Union[cwl_utils.parser.cwl_v1_0.Workflow, cwl_utils.parser.cwl_v1_1.Workflow, cwl_utils.parser.cwl_v1_2.Workflow, cwl_utils.parser.cwl_v1_0.CommandLineTool, cwl_utils.parser.cwl_v1_1.CommandLineTool, cwl_utils.parser.cwl_v1_2.CommandLineTool, cwl_utils.parser.cwl_v1_0.ExpressionTool, cwl_utils.parser.cwl_v1_1.ExpressionTool, cwl_utils.parser.cwl_v1_2.ExpressionTool, cwl_utils.parser.cwl_v1_2.Operation]\n)\n</code></pre> <p>Checks if a CWL stage-out document is a <code>Directory</code>-compatible input and <code>URI</code>-compatible output <code>Process</code>.</p> <p>Parameters:</p> Name Type Description Default <code>stage_out</code> <code>Process</code> Any CWL <code>Process</code> None <p>Returns:</p> Type Description <code>None</code> none."}]}